# 在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/views/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=utf-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false

# 设置Tomcat端口，默认8080
server.port= 8080

# 设置项目ContextPath
server.context-path= /frame

# 设置Tomcat编码
server.tomcat.uri-encoding= utf-8

# Spring Boot 默认session存储方式为redis/可关闭none
spring.session.store-type=redis

# 开发/测试/生产环境分别对应 dev/test/prod
spring.profiles.active=dev

# Redis 配置
spring.redis.database=0
spring.redis.host=192.168.10.114
spring.redis.port=7001
spring.redis.password=login@leadeon.cn
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=0

# 配置.xml文件路径
mybatis-plus.mapper-locations=classpath:/mapper/**/*Dao.xml

# 配置模型路径
mybatis-plus.typeAliasesPackage=com.makun.entity.*

# 指定静态资源的路径
spring.resources.static-locations=classpath:/views/,classpath:/static/

# 保存历史数据级别设置为full最高级别，便于历史数据的追溯
# none：不保存任何的历史数据，因此，在流程执行过程中，这是最高效的。
# activity：级别高于none，保存流程实例与流程行为，其他数据不保存。
# audit：除activity级别会保存的数据外，还会保存全部的流程任务及其属性。audit为默认值。
# full：保存历史数据的最高级别，除了会保存audit级别的数据外，
# 还会保存其他全部流程相关的细节数据，包括一些流程参数等。
spring.activiti.history=full

# 在项目单独作为一个引擎，本身不部署流程的时候，如果resources目录没有“processes”目录，
# 启动项目报错--找不到processes目录。需要在配置文件中添加
# activiti启动不自动部署
# 即启动项目，不去校验processes
spring.activiti.check-process-definitions=false

# 每次应用启动不检查Activiti数据表是否存在及版本号是否匹配，提升应用启动速度
# false为默认值，设置为该值后，Activiti在启动时，
# 会对比数据库表中保存的版本，如果没有表或者版本不匹配时，将在启动时抛出异常
# 设置为true，Activiti会对数据库中所有的表进行更新，如果表不存在，则Activiti会自动创建。
# 如果对数据库有修改，启动项目时候改为true，使用Activiti进行更新
# create-drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）。
# drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）。
spring.activiti.database-schema-update=false

#Tracker Server IP地址 多地址以英文逗号隔开
fileupload.FastDFS.trackers=192.168.25.133:22122
#连接soTimeout设置
fileupload.FastDFS.soTimeout=10000
#连接超时设置
fileupload.FastDFS.connectTimeout=5000
#连接池 maxTotal
fileupload.FastDFS.maxTotal=200
#连接池 maxTotalPerKey
fileupload.FastDFS.maxTotalPerKey=200
#连接池 maxIdlePerKey 最大空闲连接数(影响并发性能)
fileupload.FastDFS.maxIdlePerKey=50
